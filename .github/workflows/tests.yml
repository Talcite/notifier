name: tests
on:
  # Run on push to main
  push:
    paths:
      - 'notifier/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'config/config.toml'
      - '.github/workflows/tests.yml'
    branches: [ main ]
    
  # Run on PR
  pull_request:
    paths:
      - 'notifier/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'config/config.toml'
      - '.github/workflows/tests.yml'

  # Run manually
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup MySQL
        id: setup-mysql
        run: |
          container_id=$( \
            docker run -d \
            -p 3306:3306 \
            -e MYSQL_ROOT_PASSWORD=root \
            -e MYSQL_USER=root \
            -e MYSQL_PASSWORD=root \
            mysql:5.7.4 \
          )
          container_ip=$( \
            docker inspect -f \
            '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' \
            $container_id \
          )
          sed -i "s/localhost/$container_ip/g" config/auth.ci.toml
          echo "::set-output name=container-ip::$container_ip"
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.5
          virtualenvs-create: true
          virtualenvs-in-project: true
      # - name: Cache Python dependencies
      #   uses: actions/cache@v2
      #   id: cached-poetry-dependencies
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #     restore-keys: |
      #       venv-${{ runner.os }}-
      - name: Install Python dependencies
        # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      - name: Create MySQL database
        run: |
          mysql \
          -h${{ steps.setup-mysql.outputs.container-ip }} \
          -proot -uroot \
          -e "CREATE DATABASE wikidot_notifier_test;"
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest -x --notifier-config config/config.toml --notifier-auth config/auth.ci.toml
